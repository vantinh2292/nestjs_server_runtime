module.exports=function(c){c.nodes.registerType("socket_client",function(t){c.nodes.createNode(this,t),this.host=t.host,this.port=+t.port,this.indexPLC=t.indexPLC,this.plc=null,this.closing=!1,this.connected=!1;var e=this,o=(t=this.context().global).get("VariableSystem"),s=(t.get("SubFunction"),{}),l=0;e.outstandingTimers=[],e.outstandingIntervals=[],e.connection_status=0,ConnectSocket=()=>{try{null!==e.plc&&(e.plc.destroy(),e.plc.connect(parseInt(e.port),e.host,function(){e.status({fill:"blue",shape:"dot",text:"Make Connection"})}))}catch(t){console.log("Log socket: "+t)}},e.on("close",function(){for(null!==e.plc&&e.plc.destroy(),e.status({}),e.plc=null,e.connection_status=0;0<e.outstandingTimers.length;)clearTimeout(e.outstandingTimers.pop());for(;0<e.outstandingIntervals.length;)clearInterval(e.outstandingIntervals.pop());e.connection_status}),e.on("input",function(t){console.log("INPUT"),"reopen_socket"==t.payload.reopen_socket&&e.plc.connect(parseInt(e.port),e.host,function(){e.status({fill:"green",shape:"dot",text:"Connected"}),e.connection_status=1,e.connection_status});var n=setInterval(()=>{e.plc.writable&&e.plc.readable||(e.status({fill:"blue",shape:"dot",text:"Reconnect Mobile Robot"}),ConnectSocket())},3e3);if(e.outstandingIntervals.push(n),"Close_PLC"==t.payload){for(null!==e.plc&&e.plc.destroy(),e.plc=null,e.connection_status=0,e.status({});0<e.outstandingTimers.length;)clearTimeout(e.outstandingTimers.pop());for(;0<e.outstandingIntervals.length;)clearInterval(e.outstandingIntervals.pop());e.connection_status}null==e.plc?(e.log(c._("Have INPUT")),n=require("net"),e.plc=new n.Socket,o.COMMUNICATION_SOCKET_CLIENT[parseInt(e.indexPLC)]=e.plc,ConnectSocket(),e.plc.on("error",function(){e.status({fill:"red",shape:"dot",text:"Connection Error"}),e.warn("ERROR")}),e.plc.on("close",function(){e.status({fill:"red",shape:"dot",text:"Connection Closed"}),e.warn("CLOSE")}),e.plc.on("data",function(t){9999<l&&(l=0),l+=1,e.status({fill:"green",shape:"dot",text:"Receiver Data: "+l.toString()}),e.connection_status,s.payload={data:t},e.send(s)})):(e.log(c._(typeof t.payload.debug)),debug=t.payload.debug)})})};