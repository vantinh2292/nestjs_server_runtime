var ModbusRTU=require("modbus-serial");module.exports=function(e){e.nodes.registerType("plc_modbus_server",function(t){e.nodes.createNode(this,t),this.host=t.host,this.port=+t.port,this.unitID=+t.unitID,this.indexPLC=t.indexPLC,this.PLC_WordStartElement=t.PLC_WordStartElement,this.PLC_LengthOfWordElement=t.PLC_LengthOfWordElement,this.PLC_BitStartBitDisplay=t.PLC_BitStartBitDisplay,this.PLC_LengthOfBitBitDisplay=t.PLC_LengthOfBitBitDisplay,this.PLC_BitStartBitAdjust=t.PLC_BitStartBitAdjust,this.PLC_LengthOfBitBitAdjust=t.PLC_LengthOfBitBitAdjust,this.PLC_Code_BitAdjust=t.PLC_Code_BitAdjust,this.PLC_WordStartWordDisplay=t.PLC_WordStartWordDisplay,this.PLC_LengthOfWordWordDisplay=t.PLC_LengthOfWordWordDisplay,this.PLC_WordStartWordAdjust=t.PLC_WordStartWordAdjust,this.PLC_LengthOfWordWordAdjust=t.PLC_LengthOfWordWordAdjust,this.PLC_Code_WordAdjust=t.PLC_Code_WordAdjust,this.PLC_WordStartDWordDisplay=t.PLC_WordStartDWordDisplay,this.PLC_LengthOfWordDWordDisplay=t.PLC_LengthOfWordDWordDisplay,this.PLC_WordStartDWordAdjust=t.PLC_WordStartDWordAdjust,this.PLC_LengthOfWordDWordAdjust=t.PLC_LengthOfWordDWordAdjust,this.PLC_Code_DWordAdjust=t.PLC_Code_DWordAdjust,this.PLC_WordStartRotate=t.PLC_WordStartRotate,this.PLC_LengthOfWordRotate=t.PLC_LengthOfWordRotate,this.PLC_WordStartComPC=t.PLC_WordStartComPC,this.PLC_LengthOfWordComPC=t.PLC_LengthOfWordComPC,this.PLC_Enable_String=t.PLC_Enable_String,this.PLC_WordStartString=t.PLC_WordStartString,this.PLC_LengthOfWordString=t.PLC_LengthOfWordString,this.PLC_NumberWordInString=t.PLC_NumberWordInString,this.topic=t.topic,this.plc=null,this.closing=!1,this.connected=!1;var o=this,i=(t=this.context().global).get("Variable"),r=t.get("VariableSystem");t.get("SubFunction"),o.outstandingTimers=[],o.outstandingIntervals=[],o.on("close",function(){for(o.warn("CLOSE"),o.warn(o.plc),o.plc&&(o.warn("Destroy"),o.status({}),o.plc.close(),o.plc=null);0<o.outstandingTimers.length;)clearTimeout(o.outstandingTimers.pop());for(;0<o.outstandingIntervals.length;)clearInterval(o.outstandingIntervals.pop())}),o.on("input",function(t){o.log(e._("Have INPUT")),o.warn(o),r.COMMUNICATION_SERVER_TYPE[parseInt(o.indexPLC)]=!0,r.PLC_WordStartElement[parseInt(o.indexPLC)]=o.PLC_WordStartElement,r.PLC_LengthOfWordElement[parseInt(o.indexPLC)]=o.PLC_LengthOfWordElement,r.PLC_BitStartBitDisplay[parseInt(o.indexPLC)]=o.PLC_BitStartBitDisplay,r.PLC_LengthOfBitBitDisplay[parseInt(o.indexPLC)]=o.PLC_LengthOfBitBitDisplay,r.PLC_BitStartBitAdjust[parseInt(o.indexPLC)]=o.PLC_BitStartBitAdjust,r.PLC_LengthOfBitBitAdjust[parseInt(o.indexPLC)]=o.PLC_LengthOfBitBitAdjust,r.PLC_Code_BitAdjust[parseInt(o.indexPLC)]=o.PLC_Code_BitAdjust,r.PLC_WordStartWordDisplay[parseInt(o.indexPLC)]=o.PLC_WordStartWordDisplay,r.PLC_LengthOfWordWordDisplay[parseInt(o.indexPLC)]=o.PLC_LengthOfWordWordDisplay,r.PLC_WordStartWordAdjust[parseInt(o.indexPLC)]=o.PLC_WordStartWordAdjust,r.PLC_LengthOfWordWordAdjust[parseInt(o.indexPLC)]=o.PLC_LengthOfWordWordAdjust,r.PLC_Code_WordAdjust[parseInt(o.indexPLC)]=o.PLC_Code_WordAdjust,r.PLC_WordStartDWordDisplay[parseInt(o.indexPLC)]=o.PLC_WordStartDWordDisplay,r.PLC_LengthOfWordDWordDisplay[parseInt(o.indexPLC)]=o.PLC_LengthOfWordDWordDisplay,r.PLC_WordStartDWordAdjust[parseInt(o.indexPLC)]=o.PLC_WordStartDWordAdjust,r.PLC_LengthOfWordDWordAdjust[parseInt(o.indexPLC)]=o.PLC_LengthOfWordDWordAdjust,r.PLC_Code_DWordAdjust[parseInt(o.indexPLC)]=o.PLC_Code_DWordAdjust,r.PLC_WordStartRotate[parseInt(o.indexPLC)]=o.PLC_WordStartRotate,r.PLC_LengthOfWordRotate[parseInt(o.indexPLC)]=o.PLC_LengthOfWordRotate,r.PLC_WordStartComPC[parseInt(o.indexPLC)]=o.PLC_WordStartComPC,r.PLC_LengthOfWordComPC[parseInt(o.indexPLC)]=o.PLC_LengthOfWordComPC,r.PLC_Enable_String[parseInt(o.indexPLC)]=o.PLC_Enable_String,r.PLC_WordStartString[parseInt(o.indexPLC)]=o.PLC_WordStartString,r.PLC_LengthOfWordString[parseInt(o.indexPLC)]=o.PLC_LengthOfWordString,r.PLC_NumberWordInString[parseInt(o.indexPLC)]=o.PLC_NumberWordInString,o.plc=new ModbusRTU.ServerTCP({getHoldingRegister:function(t,r,e){o.warn(t),e(null,i.StoreModbusServerReg[parseInt(o.indexPLC)][t])},getCoil:function(t,r){return i.StoreModbusServerBit[parseInt(o.indexPLC)][t]},setRegister:function(t,r,e){i.StoreModbusServerReg[parseInt(o.indexPLC)][t]=r},setRegisterArray:function(t,r,e){if(Array.isArray(r))for(var[d,n]of r.entries())i.StoreModbusServerReg[parseInt(o.indexPLC)][t+d]=n},setCoil:function(t,r,e){i.StoreModbusServerBit[parseInt(o.indexPLC)][t]=r},readDeviceIdentification:function(t){return{0:"MyVendorName",1:"MyProductCode",2:"MyMajorMinorRevision",5:"MyModelName",151:"MyExtendedObject1",171:"MyExtendedObject2"}}},{host:o.host,port:o.port,debug:!0,unitID:o.unitID}),o.status({fill:"green",shape:"dot",text:"Create Modbus Server Success"}),o.plc.on("socketError",function(t){o.warn(t)}),setInterval(()=>{i.WordDisplay[parseInt(o.indexPLC)]=i.StoreModbusServerReg[parseInt(o.indexPLC)].slice(parseInt(o.PLC_WordStartWordDisplay),parseInt(o.PLC_WordStartWordDisplay)+parseInt(o.PLC_LengthOfWordWordDisplay)),i.WordAdjust[parseInt(o.indexPLC)]=i.StoreModbusServerReg[parseInt(o.indexPLC)].slice(parseInt(o.PLC_WordStartWordAdjust),parseInt(o.PLC_WordStartWordAdjust)+parseInt(o.PLC_LengthOfWordWordAdjust)),i.BitDisplay[parseInt(o.indexPLC)]=i.StoreModbusServerBit[parseInt(o.indexPLC)].slice(parseInt(o.PLC_BitStartBitDisplay),parseInt(o.PLC_BitStartBitDisplay)+parseInt(o.PLC_LengthOfBitBitDisplay)),i.BitAdjust[parseInt(o.indexPLC)]=i.StoreModbusServerBit[parseInt(o.indexPLC)].slice(parseInt(o.PLC_BitStartBitAdjust),parseInt(o.PLC_BitStartBitAdjust)+parseInt(o.PLC_LengthOfBitBitAdjust))},200)})})};