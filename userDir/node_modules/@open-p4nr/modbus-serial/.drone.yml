global-variables:
  node_image: &node_image node:18
  environment: &default_environment
    USER_TOKEN:
      from_secret: cloudsmith_api_token
    API_TOKEN:
      from_secret: api_token
    HOTFIX_TOKEN:
      from_secret: hotfix-api-token

kind: pipeline
name: cloudsmith

steps:
  - name: Build
    image: *node_image
    environment:
      <<: *default_environment
    commands:
      - cp .npmrc ~/.npmrc
      - export NPM_TOKEN=$USER_TOKEN
      - npm install
      - npm run build
    when:
      branch:
        - development
  - name: Test
    image: *node_image
    environment:
      <<: *default_environment
    commands:
      - cp .npmrc ~/.npmrc
      - export NPM_TOKEN=$USER_TOKEN
      - npm install
      - npm run test
    when:
      branch:
        - development
        - main
        - v*
  - name: Feature-Test
    image: *node_image
    environment:
      <<: *default_environment
    commands:
      - cp .npmrc ~/.npmrc
      - export NPM_TOKEN=$USER_TOKEN
      - npm install
      - npm run test:parallel
    when:
      branch:
        - feature/*
  - name: QA
    image: *node_image
    environment:
      <<: *default_environment
    commands:
      - cp .npmrc ~/.npmrc
      - export NPM_TOKEN=$USER_TOKEN
      - npm install
      - npm run test:coverage
    when:
      branch:
        - main
        - v*
  - name: Beta
    image: plugins/npm
    environment:
      <<: *default_environment
    commands:
      - cp .npmrc ~/.npmrc
      - export NPM_TOKEN=$API_TOKEN
      - npm run build
      - npm publish --access=restricted --tag beta
    when:
      branch:
        - development
  - name: Release
    image: plugins/npm
    environment:
      <<: *default_environment
    commands:
      - cp .npmrc ~/.npmrc
      - export NPM_TOKEN=$API_TOKEN
      - npm run build
      - npm publish --access=restricted --tag latest
    when:
      branch:
        - v*
  - name: CI-Release
    image: plugins/npm
    environment:
      <<: *default_environment
    commands:
      - cp .npmrcci ~/.npmrc
      - yes | cp -rf .npmrcci .npmrc
      - export NPM_TOKEN=$USER_TOKEN
      - npm install
      - export NPM_TOKEN=$API_TOKEN
      - node ./overwriteRegistryConfigForHotfix.js
      - npm run build
      - npm publish --access=restricted --tag hotfix
    when:
      branch:
        - hotfix/*
  - name: CI-Test
    image: *node_image
    environment:
      <<: *default_environment
    commands:
      - cp .npmrcci ~/.npmrc
      - npm run test
    when:
      branch:
        - hotfix/*